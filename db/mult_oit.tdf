--lpm_mult CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone III" DSP_BLOCK_BALANCING="Auto" INPUT_A_IS_CONSTANT="NO" INPUT_B_IS_CONSTANT="YES" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=129 LPM_WIDTHB=10 LPM_WIDTHP=139 LPM_WIDTHS=1 MAXIMIZE_SPEED=5 dataa datab result CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:33:SJ cbx_lpm_add_sub 2013:06:12:18:03:33:SJ cbx_lpm_mult 2013:06:12:18:03:33:SJ cbx_mgl 2013:06:12:18:33:59:SJ cbx_padd 2013:06:12:18:03:33:SJ cbx_stratix 2013:06:12:18:03:33:SJ cbx_stratixii 2013:06:12:18:03:33:SJ cbx_util_mgl 2013:06:12:18:03:33:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION cycloneiii_mac_mult (aclr, clk, dataa[dataa_width-1..0], datab[datab_width-1..0], ena, signa, signb)
WITH ( dataa_clock, dataa_width, datab_clock, datab_width, signa_clock, signb_clock)
RETURNS ( dataout[dataa_width+datab_width-1..0]);
FUNCTION cycloneiii_mac_out (aclr, clk, dataa[dataa_width-1..0], ena)
WITH ( dataa_width = 0, output_clock)
RETURNS ( dataout[dataa_width-1..0]);
FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = dsp_9bit 16 lut 122 
SUBDESIGN mult_oit
( 
	dataa[128..0]	:	input;
	datab[9..0]	:	input;
	result[138..0]	:	output;
) 
VARIABLE
	add17_result[121..0]	:	WIRE;
	mac_mult1 : cycloneiii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult11 : cycloneiii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult13 : cycloneiii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult15 : cycloneiii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 3,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult3 : cycloneiii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult5 : cycloneiii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult7 : cycloneiii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult9 : cycloneiii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_out10 : cycloneiii_mac_out
		WITH (
			dataa_width = 28,
			output_clock = "none"
		);
	mac_out12 : cycloneiii_mac_out
		WITH (
			dataa_width = 28,
			output_clock = "none"
		);
	mac_out14 : cycloneiii_mac_out
		WITH (
			dataa_width = 28,
			output_clock = "none"
		);
	mac_out16 : cycloneiii_mac_out
		WITH (
			dataa_width = 13,
			output_clock = "none"
		);
	mac_out2 : cycloneiii_mac_out
		WITH (
			dataa_width = 28,
			output_clock = "none"
		);
	mac_out4 : cycloneiii_mac_out
		WITH (
			dataa_width = 28,
			output_clock = "none"
		);
	mac_out6 : cycloneiii_mac_out
		WITH (
			dataa_width = 28,
			output_clock = "none"
		);
	mac_out8 : cycloneiii_mac_out
		WITH (
			dataa_width = 28,
			output_clock = "none"
		);
	sft18a[121..0] : soft;
	sft19a[121..0] : soft;
	sft20a[121..0] : soft;
	w407w	: WIRE;
	w792w[139..0]	: WIRE;

BEGIN 
	add17_result[] = sft18a[].out + sft19a[].out;
	mac_mult1.dataa[] = ( dataa[17..0]);
	mac_mult1.datab[] = ( datab[9..0]);
	mac_mult1.signa = B"0";
	mac_mult1.signb = B"0";
	mac_mult11.dataa[] = ( dataa[107..90]);
	mac_mult11.datab[] = ( datab[9..0]);
	mac_mult11.signa = B"0";
	mac_mult11.signb = B"0";
	mac_mult13.dataa[] = ( dataa[125..108]);
	mac_mult13.datab[] = ( datab[9..0]);
	mac_mult13.signa = B"0";
	mac_mult13.signb = B"0";
	mac_mult15.dataa[] = ( dataa[128..126]);
	mac_mult15.datab[] = ( datab[9..0]);
	mac_mult15.signa = B"0";
	mac_mult15.signb = B"0";
	mac_mult3.dataa[] = ( dataa[35..18]);
	mac_mult3.datab[] = ( datab[9..0]);
	mac_mult3.signa = B"0";
	mac_mult3.signb = B"0";
	mac_mult5.dataa[] = ( dataa[53..36]);
	mac_mult5.datab[] = ( datab[9..0]);
	mac_mult5.signa = B"0";
	mac_mult5.signb = B"0";
	mac_mult7.dataa[] = ( dataa[71..54]);
	mac_mult7.datab[] = ( datab[9..0]);
	mac_mult7.signa = B"0";
	mac_mult7.signb = B"0";
	mac_mult9.dataa[] = ( dataa[89..72]);
	mac_mult9.datab[] = ( datab[9..0]);
	mac_mult9.signa = B"0";
	mac_mult9.signb = B"0";
	mac_out10.dataa[] = mac_mult9.dataout[];
	mac_out12.dataa[] = mac_mult11.dataout[];
	mac_out14.dataa[] = mac_mult13.dataout[];
	mac_out16.dataa[] = mac_mult15.dataout[];
	mac_out2.dataa[] = mac_mult1.dataout[];
	mac_out4.dataa[] = mac_mult3.dataout[];
	mac_out6.dataa[] = mac_mult5.dataout[];
	mac_out8.dataa[] = mac_mult7.dataout[];
	sft18a[].in = ( w407w, ( mac_out16.dataout[12..12], ( mac_out16.dataout[11..11], ( mac_out16.dataout[10..10], ( mac_out14.dataout[27..27], ( mac_out14.dataout[26..26], ( mac_out14.dataout[25..25], ( mac_out14.dataout[24..24], ( mac_out14.dataout[23..23], ( mac_out14.dataout[22..22], ( mac_out14.dataout[21..21], ( mac_out14.dataout[20..20], ( mac_out14.dataout[19..19], ( mac_out14.dataout[18..18], ( mac_out14.dataout[17..17], ( mac_out14.dataout[16..16], ( mac_out14.dataout[15..15], ( mac_out14.dataout[14..14], ( mac_out14.dataout[13..13], ( mac_out14.dataout[12..12], ( mac_out14.dataout[11..11], ( mac_out14.dataout[10..10], ( mac_out12.dataout[27..27], ( mac_out12.dataout[26..26], ( mac_out12.dataout[25..25], ( mac_out12.dataout[24..24], ( mac_out12.dataout[23..23], ( mac_out12.dataout[22..22], ( mac_out12.dataout[21..21], ( mac_out12.dataout[20..20], ( mac_out12.dataout[19..19], ( mac_out12.dataout[18..18], ( mac_out12.dataout[17..17], ( mac_out12.dataout[16..16], ( mac_out12.dataout[15..15], ( mac_out12.dataout[14..14], ( mac_out12.dataout[13..13], ( mac_out12.dataout[12..12], ( mac_out12.dataout[11..11], ( mac_out12.dataout[10..10], ( mac_out10.dataout[27..27], ( mac_out10.dataout[26..26], ( mac_out10.dataout[25..25], ( mac_out10.dataout[24..24], ( mac_out10.dataout[23..23], ( mac_out10.dataout[22..22], ( mac_out10.dataout[21..21], ( mac_out10.dataout[20..20], ( mac_out10.dataout[19..19], ( mac_out10.dataout[18..18], ( mac_out10.dataout[17..17], ( mac_out10.dataout[16..16], ( mac_out10.dataout[15..15], ( mac_out10.dataout[14..14], ( mac_out10.dataout[13..13], ( mac_out10.dataout[12..12], ( mac_out10.dataout[11..11], ( mac_out10.dataout[10..10], ( mac_out8.dataout[27..27], ( mac_out8.dataout[26..26], ( mac_out8.dataout[25..25], ( mac_out8.dataout[24..24], ( mac_out8.dataout[23..23], ( mac_out8.dataout[22..22], ( mac_out8.dataout[21..21], ( mac_out8.dataout[20..20], ( mac_out8.dataout[19..19], ( mac_out8.dataout[18..18], ( mac_out8.dataout[17..17], ( mac_out8.dataout[16..16], ( mac_out8.dataout[15..15], ( mac_out8.dataout[14..14], ( mac_out8.dataout[13..13], ( mac_out8.dataout[12..12], ( mac_out8.dataout[11..11], ( mac_out8.dataout[10..10], ( mac_out6.dataout[27..27], ( mac_out6.dataout[26..26], ( mac_out6.dataout[25..25], ( mac_out6.dataout[24..24], ( mac_out6.dataout[23..23], ( mac_out6.dataout[22..22], ( mac_out6.dataout[21..21], ( mac_out6.dataout[20..20], ( mac_out6.dataout[19..19], ( mac_out6.dataout[18..18], ( mac_out6.dataout[17..17], ( mac_out6.dataout[16..16], ( mac_out6.dataout[15..15], ( mac_out6.dataout[14..14], ( mac_out6.dataout[13..13], ( mac_out6.dataout[12..12], ( mac_out6.dataout[11..11], ( mac_out6.dataout[10..10], ( mac_out4.dataout[27..27], ( mac_out4.dataout[26..26], ( mac_out4.dataout[25..25], ( mac_out4.dataout[24..24], ( mac_out4.dataout[23..23], ( mac_out4.dataout[22..22], ( mac_out4.dataout[21..21], ( mac_out4.dataout[20..20], ( mac_out4.dataout[19..19], ( mac_out4.dataout[18..18], ( mac_out4.dataout[17..17], ( mac_out4.dataout[16..16], ( mac_out4.dataout[15..15], ( mac_out4.dataout[14..14], ( mac_out4.dataout[13..13], ( mac_out4.dataout[12..12], ( mac_out4.dataout[11..11], ( mac_out4.dataout[10..10], ( mac_out2.dataout[27..27], ( mac_out2.dataout[26..26], ( mac_out2.dataout[25..25], ( mac_out2.dataout[24..24], ( mac_out2.dataout[23..23], ( mac_out2.dataout[22..22], ( mac_out2.dataout[21..21], ( mac_out2.dataout[20..20], ( mac_out2.dataout[19..18])))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft19a[].in = ( w407w, ( w407w, ( w407w, ( w407w, ( mac_out16.dataout[9..9], ( mac_out16.dataout[8..8], ( mac_out16.dataout[7..7], ( mac_out16.dataout[6..6], ( mac_out16.dataout[5..5], ( mac_out16.dataout[4..4], ( mac_out16.dataout[3..3], ( mac_out16.dataout[2..2], ( mac_out16.dataout[1..1], ( mac_out16.dataout[0..0], ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( mac_out14.dataout[9..9], ( mac_out14.dataout[8..8], ( mac_out14.dataout[7..7], ( mac_out14.dataout[6..6], ( mac_out14.dataout[5..5], ( mac_out14.dataout[4..4], ( mac_out14.dataout[3..3], ( mac_out14.dataout[2..2], ( mac_out14.dataout[1..1], ( mac_out14.dataout[0..0], ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( mac_out12.dataout[9..9], ( mac_out12.dataout[8..8], ( mac_out12.dataout[7..7], ( mac_out12.dataout[6..6], ( mac_out12.dataout[5..5], ( mac_out12.dataout[4..4], ( mac_out12.dataout[3..3], ( mac_out12.dataout[2..2], ( mac_out12.dataout[1..1], ( mac_out12.dataout[0..0], ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( mac_out10.dataout[9..9], ( mac_out10.dataout[8..8], ( mac_out10.dataout[7..7], ( mac_out10.dataout[6..6], ( mac_out10.dataout[5..5], ( mac_out10.dataout[4..4], ( mac_out10.dataout[3..3], ( mac_out10.dataout[2..2], ( mac_out10.dataout[1..1], ( mac_out10.dataout[0..0], ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( mac_out8.dataout[9..9], ( mac_out8.dataout[8..8], ( mac_out8.dataout[7..7], ( mac_out8.dataout[6..6], ( mac_out8.dataout[5..5], ( mac_out8.dataout[4..4], ( mac_out8.dataout[3..3], ( mac_out8.dataout[2..2], ( mac_out8.dataout[1..1], ( mac_out8.dataout[0..0], ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( mac_out6.dataout[9..9], ( mac_out6.dataout[8..8], ( mac_out6.dataout[7..7], ( mac_out6.dataout[6..6], ( mac_out6.dataout[5..5], ( mac_out6.dataout[4..4], ( mac_out6.dataout[3..3], ( mac_out6.dataout[2..2], ( mac_out6.dataout[1..1], ( mac_out6.dataout[0..0], ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( w407w, ( mac_out4.dataout[9..9], ( mac_out4.dataout[8..8], ( mac_out4.dataout[7..7], ( mac_out4.dataout[6..6], ( mac_out4.dataout[5..5], ( mac_out4.dataout[4..4], ( mac_out4.dataout[3..3], ( mac_out4.dataout[2..2], ( mac_out4.dataout[1..0])))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft20a[].in = add17_result[];
	result[138..0] = w792w[138..0];
	w407w = B"0";
	w792w[] = ( sft20a[121..120].out, sft20a[119..118].out, sft20a[117..116].out, sft20a[115..114].out, sft20a[113..112].out, sft20a[111..110].out, sft20a[109..108].out, sft20a[107..106].out, sft20a[105..104].out, sft20a[103..102].out, sft20a[101..100].out, sft20a[99..98].out, sft20a[97..96].out, sft20a[95..94].out, sft20a[93..92].out, sft20a[91..90].out, sft20a[89..88].out, sft20a[87..86].out, sft20a[85..84].out, sft20a[83..82].out, sft20a[81..80].out, sft20a[79..78].out, sft20a[77..76].out, sft20a[75..74].out, sft20a[73..72].out, sft20a[71..70].out, sft20a[69..68].out, sft20a[67..66].out, sft20a[65..64].out, sft20a[63..62].out, sft20a[61..60].out, sft20a[59..58].out, sft20a[57..56].out, sft20a[55..54].out, sft20a[53..52].out, sft20a[51..50].out, sft20a[49..48].out, sft20a[47..46].out, sft20a[45..44].out, sft20a[43..42].out, sft20a[41..40].out, sft20a[39..38].out, sft20a[37..36].out, sft20a[35..34].out, sft20a[33..32].out, sft20a[31..30].out, sft20a[29..28].out, sft20a[27..26].out, sft20a[25..24].out, sft20a[23..22].out, sft20a[21..20].out, sft20a[19..18].out, sft20a[17..16].out, sft20a[15..14].out, sft20a[13..12].out, sft20a[11..10].out, sft20a[9..8].out, sft20a[7..6].out, sft20a[5..4].out, sft20a[3..2].out, sft20a[1..0].out, mac_out2.dataout[17..17], mac_out2.dataout[16..16], mac_out2.dataout[15..15], mac_out2.dataout[14..14], mac_out2.dataout[13..13], mac_out2.dataout[12..12], mac_out2.dataout[11..11], mac_out2.dataout[10..10], mac_out2.dataout[9..9], mac_out2.dataout[8..8], mac_out2.dataout[7..7], mac_out2.dataout[6..6], mac_out2.dataout[5..5], mac_out2.dataout[4..4], mac_out2.dataout[3..3], mac_out2.dataout[2..2], mac_out2.dataout[1..1], mac_out2.dataout[0..0]);
END;
--VALID FILE
